rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isValidMessage() {
      let message = request.resource.data;
      return 
        message.id is string &&
        message.senderId is string &&
        message.content is string &&
        message.content.size() <= 10000 && // Limit message size
        message.timestamp is timestamp &&
        message.isAI is bool &&
        (message.senderName == null || message.senderName is string);
    }

    function isValidChatMetadata() {
      let metadata = request.resource.data;
      return 
        (!('title' in metadata) || metadata.title is string) &&
        (!('isPinned' in metadata) || metadata.isPinned is bool);
    }

    function isValidUserData() {
      let userData = request.resource.data;
      return 
        userData.displayName is string &&
        userData.email is string &&
        userData.lastSignInTime is timestamp &&
        userData.provider is string;
    }

    function debug(msg) {
      return msg;
    }

    // Users collection rules
    match /users/{userId} {
      // Allow read if authenticated and reading own document
      allow read: if isAuthenticated() && isOwner(userId);
      
      // Allow write if authenticated, writing own document, and data is valid
      allow create, update: if 
        isAuthenticated() && 
        isOwner(userId) && 
        isValidUserData();
        
      // Allow delete if authenticated and deleting own document
      allow delete: if isAuthenticated() && isOwner(userId);
    }

    match /chats/{messageId} {
      // Read: Any authenticated user can read messages
      allow read: if debug('Reading chats: ' + request.auth.uid) != null && isAuthenticated();
      
      // Create: Authenticated users can create messages if they are the sender
      allow create: if 
        debug('Creating chat: ' + request.auth.uid) != null &&
        isAuthenticated() &&
        isValidMessage() &&
        isOwner(request.resource.data.senderId);
      
      // Update: Messages cannot be updated (they are immutable)
      allow update: if false;
      
      // Delete: Only message owners can delete their messages
      allow delete: if 
        debug('Deleting chat: ' + request.auth.uid) != null &&
        isAuthenticated() &&
        isOwner(resource.data.senderId);
    }

    match /chat_metadata/{chatId} {
      // Read: Any authenticated user can read chat metadata
      allow read: if debug('Reading metadata: ' + request.auth.uid) != null && isAuthenticated();
      
      // Write: Any authenticated user can create/update chat metadata
      allow write: if 
        debug('Writing metadata: ' + request.auth.uid) != null &&
        isAuthenticated() &&
        isValidChatMetadata();
      
      // Delete: Any authenticated user can delete chat metadata
      allow delete: if debug('Deleting metadata: ' + request.auth.uid) != null && isAuthenticated();
    }
  }
} 