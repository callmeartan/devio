# Uncomment this line to define a global platform for your project
platform :ios, '16.0'

# Use CDN for better reliability
source 'https://cdn.cocoapods.org/'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Increase network timeouts to help with downloads
ENV['COCOAPODS_NETWORK_TIMEOUT'] = '120'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  if !File.exist?(generated_xcode_build_settings_path)
    flutter_dir = File.expand_path(File.join('..', 'Flutter'), __FILE__)
    Dir.mkdir(flutter_dir) unless File.exist?(flutter_dir)
    
    File.write(generated_xcode_build_settings_path, "FLUTTER_ROOT=#{ENV['HOME']}/Desktop/development/flutter\n")
    File.write(generated_xcode_build_settings_path, "FLUTTER_APPLICATION_PATH=#{File.expand_path(File.join('..'), __FILE__)}\n", mode: 'a')
    File.write(generated_xcode_build_settings_path, "FLUTTER_TARGET=lib/main.dart\n", mode: 'a')
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  
  ENV['HOME'] + '/Desktop/development/flutter'
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  # Remove explicit Firebase version dependencies to allow Flutter plugins to work
  # flutter_install_all_ios_pods will handle the Firebase versions

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    target.build_configurations.each do |config|
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
      
      # Add arm64 to excluded architectures for simulators
      if config.build_settings['SDKROOT'] == 'iphoneos'
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
      end
    end
  end
end
